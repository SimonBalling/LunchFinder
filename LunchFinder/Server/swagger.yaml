x-generator: NSwag v14.0.7.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))
openapi: 3.0.0
info:
  title: My Title
  version: 1.0.0
paths:
  /api/Tags:
    get:
      tags:
      - Tags
      operationId: Tags_GetTags
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
    post:
      tags:
      - Tags
      operationId: Tags_PostTag
      requestBody:
        x-name: tag
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
        x-position: 1
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Tags/{id}:
    get:
      tags:
      - Tags
      summary: Get Tag by ID
      operationId: Tags_GetTag
      parameters:
      - name: id
        in: path
        required: true
        description: The tags ID
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        404:
          description: fghfghf
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
    put:
      tags:
      - Tags
      operationId: Tags_PutTag
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: tag
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
        x-position: 2
      responses:
        201:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
      - Tags
      operationId: Tags_DeleteTag
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Places:
    get:
      tags:
      - Places
      operationId: Places_GetPlaces
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Place'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    post:
      tags:
      - Places
      operationId: Places_PostPlace
      requestBody:
        x-name: place
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Place'
        required: true
        x-position: 1
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/Places/{id}:
    get:
      tags:
      - Places
      operationId: Places_GetPlace
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Place'
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    put:
      tags:
      - Places
      operationId: Places_PutPlace
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      requestBody:
        x-name: place
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Place'
        required: true
        x-position: 2
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
    delete:
      tags:
      - Places
      operationId: Places_DeletePlace
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
        x-position: 1
      responses:
        200:
          description: ''
        404:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  schemas:
    ProblemDetails:
      type: object
      additionalProperties:
        nullable: true
      properties:
        type:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
    Tag:
      type: object
      description: Represents a tag
      additionalProperties: false
      properties:
        id:
          type: integer
          description: ID generated by the database
          format: int32
        name:
          type: string
          description: Display name of the tag
          maxLength: 50
        description:
          type: string
          description: Description of the tag
          maxLength: 500
        color:
          type: string
          description: >-
            The color the tag should be rendered with

            In hex format
    Place:
      type: object
      description: "Represents a place where you can get Lunch\n            "
      additionalProperties: false
      properties:
        id:
          type: integer
          description: "ID generated by the database\n            "
          format: int32
        name:
          type: string
          description: "Name of the place\n            "
          maxLength: 450
        description:
          type: string
          description: "Description of the place\n            "
          maxLength: 4000
        tags:
          type: array
          description: "List of tags attached to the place\n            "
          items:
            $ref: '#/components/schemas/Tag'
        address:
          description: "Address of the place\n            "
          oneOf:
          - $ref: '#/components/schemas/Address'
        contactInformation:
          type: array
          description: "A list of contact information for the place\n            "
          nullable: true
          items:
            $ref: '#/components/schemas/ContactInformation'
    Address:
      type: object
      description: "Represents an address\n            "
      additionalProperties: false
      properties:
        id:
          type: integer
          description: "ID generated by the database\n            "
          format: int32
        street:
          type: string
          description: "Name of the street\n            "
          maxLength: 200
        city:
          type: string
          description: "Name of the city\n            "
          maxLength: 200
        number:
          type: string
          description: "House number\n            "
          maxLength: 200
        postalCode:
          type: string
          description: "Postal code\n            "
          maxLength: 200
        country:
          type: string
          description: "Name of the country\n            "
          maxLength: 200
    ContactInformation:
      type: object
      description: "Represents contact information\n            "
      additionalProperties: false
      properties:
        id:
          type: integer
          description: "ID generated by the database\n            "
          format: int32
        description:
          type: string
          description: "Description of the place\n            "
          maxLength: 500
        value:
          type: string
          description: "Description of the place\n            "
          maxLength: 500
