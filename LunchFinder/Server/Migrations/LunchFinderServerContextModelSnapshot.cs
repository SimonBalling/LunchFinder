// <auto-generated />
using System;
using LunchFinder.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LunchFinder.Server.Migrations
{
    [DbContext(typeof(LunchFinderServerContext))]
    partial class LunchFinderServerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LunchFinder.Server.Places.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("LunchFinder.Server.Places.ContactInformation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PlaceId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("PlaceId");

                    b.ToTable("ContactInformation");
                });

            modelBuilder.Entity("LunchFinder.Server.Places.Place", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("AddressId");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("LunchFinder.Server.Tags.Tag", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PlaceId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PlaceId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("LunchFinder.Server.Places.ContactInformation", b =>
                {
                    b.HasOne("LunchFinder.Server.Places.Place", null)
                        .WithMany("ContactInformation")
                        .HasForeignKey("PlaceId");
                });

            modelBuilder.Entity("LunchFinder.Server.Places.Place", b =>
                {
                    b.HasOne("LunchFinder.Server.Places.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("LunchFinder.Server.Tags.Tag", b =>
                {
                    b.HasOne("LunchFinder.Server.Places.Place", null)
                        .WithMany("Tags")
                        .HasForeignKey("PlaceId");
                });

            modelBuilder.Entity("LunchFinder.Server.Places.Place", b =>
                {
                    b.Navigation("ContactInformation");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
